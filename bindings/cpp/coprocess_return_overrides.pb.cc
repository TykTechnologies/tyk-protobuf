// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: coprocess_return_overrides.proto

#include "coprocess_return_overrides.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_coprocess_5freturn_5foverrides_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_coprocess_5freturn_5foverrides_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReturnOverrides_HeadersEntry_DoNotUse;
}  // namespace protobuf_coprocess_5freturn_5foverrides_2eproto
namespace coprocess {
class ReturnOverrides_HeadersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnOverrides_HeadersEntry_DoNotUse>
      _instance;
} _ReturnOverrides_HeadersEntry_DoNotUse_default_instance_;
class ReturnOverridesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReturnOverrides>
      _instance;
} _ReturnOverrides_default_instance_;
}  // namespace coprocess
namespace protobuf_coprocess_5freturn_5foverrides_2eproto {
static void InitDefaultsReturnOverrides_HeadersEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coprocess::_ReturnOverrides_HeadersEntry_DoNotUse_default_instance_;
    new (ptr) ::coprocess::ReturnOverrides_HeadersEntry_DoNotUse();
  }
  ::coprocess::ReturnOverrides_HeadersEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReturnOverrides_HeadersEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReturnOverrides_HeadersEntry_DoNotUse}, {}};

static void InitDefaultsReturnOverrides() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::coprocess::_ReturnOverrides_default_instance_;
    new (ptr) ::coprocess::ReturnOverrides();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::coprocess::ReturnOverrides::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReturnOverrides =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReturnOverrides}, {
      &protobuf_coprocess_5freturn_5foverrides_2eproto::scc_info_ReturnOverrides_HeadersEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnOverrides_HeadersEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReturnOverrides.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides_HeadersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides_HeadersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides_HeadersEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides, response_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides, response_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::coprocess::ReturnOverrides, headers_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::coprocess::ReturnOverrides_HeadersEntry_DoNotUse)},
  { 9, -1, sizeof(::coprocess::ReturnOverrides)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::coprocess::_ReturnOverrides_HeadersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::coprocess::_ReturnOverrides_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "coprocess_return_overrides.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n coprocess_return_overrides.proto\022\tcopr"
      "ocess\"\252\001\n\017ReturnOverrides\022\025\n\rresponse_co"
      "de\030\001 \001(\005\022\026\n\016response_error\030\002 \001(\t\0228\n\007head"
      "ers\030\003 \003(\0132\'.coprocess.ReturnOverrides.He"
      "adersEntry\032.\n\014HeadersEntry\022\013\n\003key\030\001 \001(\t\022"
      "\r\n\005value\030\002 \001(\t:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 226);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "coprocess_return_overrides.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_coprocess_5freturn_5foverrides_2eproto
namespace coprocess {

// ===================================================================

ReturnOverrides_HeadersEntry_DoNotUse::ReturnOverrides_HeadersEntry_DoNotUse() {}
ReturnOverrides_HeadersEntry_DoNotUse::ReturnOverrides_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ReturnOverrides_HeadersEntry_DoNotUse::MergeFrom(const ReturnOverrides_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ReturnOverrides_HeadersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_coprocess_5freturn_5foverrides_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocess_5freturn_5foverrides_2eproto::file_level_metadata[0];
}
void ReturnOverrides_HeadersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ReturnOverrides::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReturnOverrides::kResponseCodeFieldNumber;
const int ReturnOverrides::kResponseErrorFieldNumber;
const int ReturnOverrides::kHeadersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReturnOverrides::ReturnOverrides()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_coprocess_5freturn_5foverrides_2eproto::scc_info_ReturnOverrides.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:coprocess.ReturnOverrides)
}
ReturnOverrides::ReturnOverrides(const ReturnOverrides& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  headers_.MergeFrom(from.headers_);
  response_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_error().size() > 0) {
    response_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_error_);
  }
  response_code_ = from.response_code_;
  // @@protoc_insertion_point(copy_constructor:coprocess.ReturnOverrides)
}

void ReturnOverrides::SharedCtor() {
  response_error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_code_ = 0;
}

ReturnOverrides::~ReturnOverrides() {
  // @@protoc_insertion_point(destructor:coprocess.ReturnOverrides)
  SharedDtor();
}

void ReturnOverrides::SharedDtor() {
  response_error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReturnOverrides::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReturnOverrides::descriptor() {
  ::protobuf_coprocess_5freturn_5foverrides_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocess_5freturn_5foverrides_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReturnOverrides& ReturnOverrides::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_coprocess_5freturn_5foverrides_2eproto::scc_info_ReturnOverrides.base);
  return *internal_default_instance();
}


void ReturnOverrides::Clear() {
// @@protoc_insertion_point(message_clear_start:coprocess.ReturnOverrides)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  response_error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_code_ = 0;
  _internal_metadata_.Clear();
}

bool ReturnOverrides::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:coprocess.ReturnOverrides)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 response_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &response_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_error().data(), static_cast<int>(this->response_error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "coprocess.ReturnOverrides.response_error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> headers = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          ReturnOverrides_HeadersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ReturnOverrides_HeadersEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&headers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "coprocess.ReturnOverrides.HeadersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "coprocess.ReturnOverrides.HeadersEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:coprocess.ReturnOverrides)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:coprocess.ReturnOverrides)
  return false;
#undef DO_
}

void ReturnOverrides::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:coprocess.ReturnOverrides)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 response_code = 1;
  if (this->response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->response_code(), output);
  }

  // string response_error = 2;
  if (this->response_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_error().data(), static_cast<int>(this->response_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "coprocess.ReturnOverrides.response_error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->response_error(), output);
  }

  // map<string, string> headers = 3;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "coprocess.ReturnOverrides.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "coprocess.ReturnOverrides.HeadersEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ReturnOverrides_HeadersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ReturnOverrides_HeadersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:coprocess.ReturnOverrides)
}

::google::protobuf::uint8* ReturnOverrides::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:coprocess.ReturnOverrides)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 response_code = 1;
  if (this->response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->response_code(), target);
  }

  // string response_error = 2;
  if (this->response_error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_error().data(), static_cast<int>(this->response_error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "coprocess.ReturnOverrides.response_error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->response_error(), target);
  }

  // map<string, string> headers = 3;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "coprocess.ReturnOverrides.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "coprocess.ReturnOverrides.HeadersEntry.value");
      }
    };

    if (deterministic &&
        this->headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ReturnOverrides_HeadersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ReturnOverrides_HeadersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:coprocess.ReturnOverrides)
  return target;
}

size_t ReturnOverrides::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:coprocess.ReturnOverrides)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> headers = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->headers_size());
  {
    ::std::unique_ptr<ReturnOverrides_HeadersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->headers().begin();
        it != this->headers().end(); ++it) {
      entry.reset(headers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string response_error = 2;
  if (this->response_error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_error());
  }

  // int32 response_code = 1;
  if (this->response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->response_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReturnOverrides::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:coprocess.ReturnOverrides)
  GOOGLE_DCHECK_NE(&from, this);
  const ReturnOverrides* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReturnOverrides>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:coprocess.ReturnOverrides)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:coprocess.ReturnOverrides)
    MergeFrom(*source);
  }
}

void ReturnOverrides::MergeFrom(const ReturnOverrides& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:coprocess.ReturnOverrides)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  if (from.response_error().size() > 0) {

    response_error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_error_);
  }
  if (from.response_code() != 0) {
    set_response_code(from.response_code());
  }
}

void ReturnOverrides::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:coprocess.ReturnOverrides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnOverrides::CopyFrom(const ReturnOverrides& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:coprocess.ReturnOverrides)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnOverrides::IsInitialized() const {
  return true;
}

void ReturnOverrides::Swap(ReturnOverrides* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReturnOverrides::InternalSwap(ReturnOverrides* other) {
  using std::swap;
  headers_.Swap(&other->headers_);
  response_error_.Swap(&other->response_error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(response_code_, other->response_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReturnOverrides::GetMetadata() const {
  protobuf_coprocess_5freturn_5foverrides_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_coprocess_5freturn_5foverrides_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace coprocess
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::coprocess::ReturnOverrides_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage< ::coprocess::ReturnOverrides_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::coprocess::ReturnOverrides_HeadersEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::coprocess::ReturnOverrides* Arena::CreateMaybeMessage< ::coprocess::ReturnOverrides >(Arena* arena) {
  return Arena::CreateInternal< ::coprocess::ReturnOverrides >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
